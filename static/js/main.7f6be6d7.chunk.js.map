{"version":3,"sources":["components/HeaderComp.js","components/MainComponents/Form.js","components/MainComponents/Display.js","components/MainComponents/Error.js","components/MainComponents/MainComp.js","components/FooterComp.js","components/App.js","index.js"],"names":["HeaderComp","className","Form","props","onSubmit","onFindCity","type","placeholder","value","city","onChange","onClick","onClear","Display","temperature","description","sunrise","sunset","tempMin","tempMax","pressure","humidyty","visibility","wind","sunriseTime","Date","toLocaleTimeString","sunsetTime","substr","Error","MainComp","state","isLoaded","error","handleChange","e","setState","target","handleClear","preventDefault","handleFindCity","length","alert","console","log","fetch","then","res","status","json","data","Math","floor","main","temp","weather","sys","temp_min","temp_max","humidity","speed","catch","err","this","Component","FooterComp","App","ReactDOM","render","document","getElementById"],"mappings":"6LAUeA,EARI,WACjB,OACE,4BAAQC,UAAU,UAChB,wBAAIA,UAAU,iBAAd,iB,mCCkBSC,EArBF,SAACC,GACZ,OACE,0BAAMC,SAAUD,EAAME,WAAYJ,UAAU,QAC1C,2BACEK,KAAK,OACLL,UAAU,cACVM,YAAY,oBACZC,MAAOL,EAAMM,KACbC,SAAUP,EAAMO,WAGlB,4BAAQT,UAAU,aAAlB,aAEA,4BACEA,UAAU,YACVU,QAASR,EAAMS,SAFjB,WCQSC,EArBC,SAAC,GAAiH,IAA/GJ,EAA8G,EAA9GA,KAAMK,EAAwG,EAAxGA,YAAaC,EAA2F,EAA3FA,YAAaC,EAA8E,EAA9EA,QAASC,EAAqE,EAArEA,OAAQC,EAA6D,EAA7DA,QAASC,EAAoD,EAApDA,QAASC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,KAC9GC,EAAc,IAAIC,KAAe,IAAVT,GAAgBU,qBACvCC,EAAa,IAAIF,KAAc,IAATR,GAAeS,qBAE3C,OACE,yBAAKzB,UAAU,WACb,uBAAGA,UAAU,wBAAwBa,EAArC,SACA,uBAAGb,UAAU,iBAAiBQ,GAC9B,uBAAGR,UAAU,wBAAwBc,GACrC,uBAAGd,UAAU,iBAAb,YAAuCuB,EAAYI,OAAO,EAAG,IAC7D,uBAAG3B,UAAU,iBAAb,WAAsC0B,EAAWC,OAAO,EAAG,IAC3D,uBAAG3B,UAAU,iBAAb,UAAqCiB,EAArC,SACA,uBAAGjB,UAAU,iBAAb,UAAqCkB,EAArC,SACA,uBAAGlB,UAAU,iBAAb,WAAsCmB,EAAtC,QACA,uBAAGnB,UAAU,iBAAb,aAAwCoB,EAAxC,KACA,uBAAGpB,UAAU,iBAAb,eAA0CqB,EAAa,IAAvD,MACA,uBAAGrB,UAAU,iBAAb,SAAoCsB,EAApC,SCNSM,EAVD,WACZ,OACE,yBAAK5B,UAAU,WACb,uBAAGA,UAAU,kBAAb,mBC4HS6B,E,2MA3HbC,MAAQ,CACNC,UAAU,EACVC,OAAO,EACPxB,KAAM,GACNK,YAAa,GACbC,YAAa,GACbC,QAAS,GACTC,OAAQ,GACRC,QAAS,GACTC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,KAAM,I,EAKRW,aAAe,SAACC,GACd,EAAKC,SAAS,CACZ3B,KAAM0B,EAAEE,OAAO7B,MACfwB,UAAU,EACVC,OAAO,K,EAIXK,YAAc,SAACH,GACbA,EAAEI,iBAEF,EAAKH,SAAS,CACZ3B,KAAM,GACNuB,UAAU,EACVC,OAAO,K,EAIXO,eAAiB,SAACL,GAGhB,GAFAA,EAAEI,iBAE6B,IAA3B,EAAKR,MAAMtB,KAAKgC,OAClB,OAAOC,MAAM,qBAGfC,QAAQC,IAAI,EAAKb,MAAMtB,MACvBoC,MAAM,oDAAD,OAAqD,EAAKd,MAAMtB,KAAhE,yDACFqC,KAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIC,OACN,OAAOD,EAAIE,OAQb,MAP0B,MAAfF,EAAIC,QACb,EAAKZ,SAAS,CACZH,OAAO,EACPD,UAAU,IAIRH,EAAM,qBAEbiB,KAAK,SAAAI,GAGJ,EAAKd,SAAS,CACZJ,UAAU,EACVC,OAAO,EACPnB,YAAaqC,KAAKC,MAAMF,EAAKG,KAAKC,MAClCvC,YAAamC,EAAKK,QAAQ,GAAGxC,YAC7BC,QAASkC,EAAKM,IAAIxC,QAClBC,OAAQiC,EAAKM,IAAIvC,OACjBC,QAASgC,EAAKG,KAAKI,SACnBtC,QAAS+B,EAAKG,KAAKK,SACnBtC,SAAU8B,EAAKG,KAAKjC,SACpBC,SAAU6B,EAAKG,KAAKM,SACpBrC,WAAY4B,EAAK5B,WACjBC,KAAM2B,EAAK3B,KAAKqC,UAGnBC,MAAM,SAAAC,GAAG,OAAInB,QAAQC,IAAIkB,M,wEAKpB,IAAD,SAC2BC,KAAKhC,MAA/BE,EADD,EACCA,MAAOxB,EADR,EACQA,KAAMuB,EADd,EACcA,SAkBrB,OACE,0BAAM/B,UAAU,QACd,6BAASA,UAAU,iBAEjB,kBAAC,EAAD,CACES,SAAUqD,KAAK7B,aACftB,QAASmD,KAAKzB,YACdjC,WAAY0D,KAAKvB,eACjB/B,KAAMA,IAOPwB,EA7BH,kBAAC,EAAD,MAKED,EAEA,kBAAC,EAAY,EAAKD,OAGZ,W,GAhGOiC,aCORC,EAVI,WACjB,OACE,4BAAQhE,UAAU,UAChB,uBAAGA,UAAU,qBAAb,+CCWSiE,EAVH,WACV,OACE,yBAAKjE,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCNNkE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7f6be6d7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst HeaderComp = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header__title\">weather app</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default HeaderComp;","import React from 'react';\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <form onSubmit={props.onFindCity} className=\"form\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form__input\"\r\n        placeholder=\"Type city name...\"\r\n        value={props.city}\r\n        onChange={props.onChange}\r\n      />\r\n\r\n      <button className=\"form__btn\">Find city</button>\r\n\r\n      <button\r\n        className=\"form__btn\"\r\n        onClick={props.onClear}\r\n      >Clear</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Display = ({ city, temperature, description, sunrise, sunset, tempMin, tempMax, pressure, humidyty, visibility, wind }) => {\r\n  const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n  const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n\r\n  return (\r\n    <div className=\"display\">\r\n      <p className=\"display__temperature\">{temperature}&#176;C</p>\r\n      <p className=\"display__city\">{city}</p>\r\n      <p className=\"display__description\">{description}</p>\r\n      <p className=\"display__data\">Sunrise: {sunriseTime.substr(0, 5)}</p>\r\n      <p className=\"display__data\">Sunset: {sunsetTime.substr(0, 5)}</p>\r\n      <p className=\"display__data\">T min: {tempMin}&#176;C</p>\r\n      <p className=\"display__data\">T max: {tempMax}&#176;C</p>\r\n      <p className=\"display__data\">Press.: {pressure} hPa</p>\r\n      <p className=\"display__data\">Humidyty: {humidyty}%</p>\r\n      <p className=\"display__data\">Visibility: {visibility / 1000}km</p>\r\n      <p className=\"display__data\">Wind: {wind}m/s</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;","import React from 'react';\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div className=\"display\">\r\n      <p className=\"display__error\">\r\n        No Data Found\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;","import React, { Component } from 'react';\r\nimport Form from './Form';\r\nimport Display from './Display';\r\nimport Error from './Error';\r\n\r\nclass MainComp extends Component {\r\n  state = {\r\n    isLoaded: false,\r\n    error: false,\r\n    city: '',\r\n    temperature: '',\r\n    description: '',\r\n    sunrise: '',\r\n    sunset: '',\r\n    tempMin: '',\r\n    tempMax: '',\r\n    pressure: '',\r\n    humidyty: '',\r\n    visibility: '',\r\n    wind: '',\r\n  }\r\n\r\n\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      city: e.target.value,\r\n      isLoaded: false,\r\n      error: false,\r\n    })\r\n  }\r\n\r\n  handleClear = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      city: '',\r\n      isLoaded: false,\r\n      error: false,\r\n    })\r\n  }\r\n\r\n  handleFindCity = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.city.length === 0) {\r\n      return alert('Type some city...');\r\n    }\r\n\r\n    console.log(this.state.city)\r\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&APPID=a9302906cfdb7f28449954dd9590d745&units=metric`)\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          return res.json();\r\n        } else if (res.status === 404) {\r\n          this.setState({\r\n            error: true,\r\n            isLoaded: false,\r\n          })\r\n        }\r\n\r\n        throw Error('Something wrong')\r\n      })\r\n      .then(data => {\r\n        // console.log(data)\r\n\r\n        this.setState({\r\n          isLoaded: true,\r\n          error: false,\r\n          temperature: Math.floor(data.main.temp),\r\n          description: data.weather[0].description,\r\n          sunrise: data.sys.sunrise,\r\n          sunset: data.sys.sunset,\r\n          tempMin: data.main.temp_min,\r\n          tempMax: data.main.temp_max,\r\n          pressure: data.main.pressure,\r\n          humidyty: data.main.humidity,\r\n          visibility: data.visibility,\r\n          wind: data.wind.speed,\r\n        })\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { error, city, isLoaded } = this.state;\r\n\r\n    const returnError = () => {\r\n      return (\r\n        <Error />\r\n      )\r\n    }\r\n\r\n    const returnDisplay = () => {\r\n      if (isLoaded) {\r\n        return (\r\n          <Display {...this.state} />\r\n        );\r\n      } else {\r\n        return (null);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <main className=\"main\">\r\n        <section className=\"main__wrapper\">\r\n\r\n          <Form\r\n            onChange={this.handleChange}\r\n            onClear={this.handleClear}\r\n            onFindCity={this.handleFindCity}\r\n            city={city}\r\n          />\r\n\r\n          {/* <Display {...this.state} /> */}\r\n\r\n          {/* <Error /> */}\r\n\r\n          {error ? returnError() : returnDisplay()}\r\n\r\n\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainComp;","import React from 'react';\r\n\r\nconst FooterComp = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__paragraph\">\r\n        Weather App &#169; 2019 All Rights Reserved\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default FooterComp;","import React from 'react';\nimport HeaderComp from './HeaderComp';\nimport MainComp from './MainComponents/MainComp';\nimport FooterComp from './FooterComp';\n\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <HeaderComp />\n      <MainComp />\n      <FooterComp />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './css/style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}